upstream client {
    server client:3000;
}

upstream api {
    server api:5000;
}

server {
    listen 80;

    location / {
        proxy_pass http://client;
    }

    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }
}




# The upstream directive is used to define a group of backend servers that Nginx can proxy requests to

# upstream client: Routes traffic to the client service on port 3000
# upstream api: Routes traffic to the api service on port 5000
# server { listen 80; }: Listens for HTTP requests on port 80
# location /: Forwards root URL (/) requests to the client upstream
# location /api: Rewrites /api/* URLs to remove /api prefix and forwards them to the api upstream

# This setup directs general web traffic to a frontend application and API requests to a backend service, effectively separating concerns and routing appropriately